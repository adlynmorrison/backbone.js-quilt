// JavaScript Document
//reference our namespace (naming the sandbox)
var TodoApp = window.TodoApp || {};

//let's make a view
TodoApp.TodoView = Backbone.View.extend({
	//uppercase 'N' matters
	//this will contain all markup generated by this view in an <li>
	tagName: 'li',
	//this class with be applied to the containing li
	className: 'todo',
	//the bout will make a container like <li class="todo"></li>
	
	//preconpile out template, cannot be names however we want.
	template: _.template($('#todo-template').html()),
	
	events: {
		'click .delete': 'delete_todo',
	},
	
	delete_todo: function(e) {
		e.preventDefault();
		
		this.model.destroy();
		
		this.$el.slideUp('fast', function(){
			this.remove();
		});
	},
	
	render: function() {
		//store the rendered html
		//references the instance of this class
		var new_html = this.template(this.model.toJSON());
		
		console.log(new_html);
		
		//append the new html to the container element
		this.$el.html(new_html);
		
		//modify this li if the task is important
		//see if this.model is important
		if (this.model.get('important')) {
			this.$el.addClass('important');
		}
		
		return this;
	}
});